# Push button
# Connect to USB
# sudo mount /dev/sda1 /mnt
# sudo cp out/klipper.uf2 /mnt
# sudo umount /mnt

[include rp2040_pin_aliases.cfg]
[include search_vars.cfg]

#========================================================
#=====================iHeater cfg=========================
#========================================================

[mcu iHeater]
serial: /dev/serial/by-id/usb-Klipper_rp2040_DE63581213745233-if00 


#PID_CALIBRATE HEATER=iHeater_M_Heater TARGET=50
[heater_generic iHeater_H]
heater_pin: iHeater:H0
max_power: 1
# sensor_type: NTC 100K MGB18-104F39050L32
# sensor_pin: iHeater:T0
sensor: iHeater_Sens_H
control: pid
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 120
pid_Kp=32.923
pid_Ki=5.628
pid_Kd=48.150


[verify_heater iHeater_H]
max_error: 240
check_gain_time: 120
heating_gain: 1


[fan_generic iHeater_F]
pin: iHeater:FAN0
max_power: 1.0
shutdown_speed: 0


[temperature_sensor iHeater_Sens_C]
sensor_pin: iHeater:T0
sensor_type: NTC 100K MGB18-104F39050L32

[temperature_sensor iHeater_Sens_H]
sensor_pin: iHeater:T1
sensor_type: NTC 100K MGB18-104F39050L32


[gcode_macro M141]
rename_existing: M141.1
gcode:
    M141.1 S{params.S|0}
    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=0

[gcode_macro M191]
gcode:
    M191.1 S{params.S|0}
    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=0

[delayed_gcode _iHEATER_CONTROL]
gcode:
    {% set current_temp = printer.heater_generic.iHeater_H.temperature %}
    {% set target_temp = printer.heater_generic.iHeater_H.target %}
    {% if target_temp > 0 %}
        # Логика управления вентилятором на основе температуры камеры
        {% set chamber_temp = printer.temperature_sensor.iHeater_Sens_C.temperature %}
        {% if chamber_temp >= 50 %}
            SET_FAN_SPEED FAN=iHeater_F SPEED=1.0
        {% else %}
            SET_FAN_SPEED FAN=iHeater_F SPEED=0.0
        {% endif %}
        # Перезапуск макроса через 1 секунду
        UPDATE_DELAYED_GCODE ID=iHeater_control DURATION=1
    {% else %}
        # Остановка нагревателя и вентилятора
        SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET=0
        SET_FAN_SPEED FAN=iHeater_F SPEED=0.0
        RESPOND prefix="iHeater_control" msg="Нагрев камеры остановлен."
    {% endif %}


[gcode_macro HEAT]
gcode:
    {% set chamber_temp = params.CHAMBER_TEMP|default(40)|int %} 
    SET_GCODE_VARIABLE MACRO=HEAT_MODE VARIABLE=temp VALUE={chamber_temp}


[gcode_macro HEAT_MODE]
variable_temp: 5
variable_duration: 5
variable_delta_high: 20
variable_data: {}
gcode:
    {% set set_chamber_temp = params.CHAMBER_TEMP|default(40)|int %} 

    { action_respond_info(" HEAT ----- [ temp  %s | duration  %s ] -----" %(set_chamber_temp, set_chamber_humidity, set_chamber_duration) )}

    {action_respond_info("Current temp  %.2f%%" %(printer['temperature_sensor iHeater_C'].temperature))}
    SET_GCODE_VARIABLE MACRO=DRY_MODE_U1 VARIABLE=temp VALUE={set_chamber_temp}

    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1


[delayed_gcode _iHEATER_CONTROL_II]
gcode:
    {% set chamber_data = printer['gcode_macro DRY_MODE_U1'] %}
    {% set temperature = chamber_data.temp %}
    {% set delta_high =  chamber_data.delta_high %}
    
    { action_respond_info("Unit_1 T: %s H: %.2f%%" %(temperature))}
    
    {% if printer['temperature_sensor iHeater_C'].temperature|int > temperature|int %}
        {% set target_temp = 0|int %}
    {% elif printer['temperature_sensor iHeater_C'].temperature|int == temperature|int %}
        {% set target_temp = printer['temperature_sensor iHeater_C'].temperature|int %}
    {% elif printer['temperature_sensor iHeater_C'].temperature|int < temperature|int %}
        {% set target_temp = temperature - printer['temperature_sensor iHeater_C'].temperature + temperature + delta_high%}
        {% if target_temp > temperature + delta_high %} 
            {% set target_temp = temperature|int + delta_high|int %}
        {% endif %}
    {% endif %}
    
    SET_HEATER_TEMPERATURE HEATER=iHeater_M_Heater TARGET={target_temp|int}
    UPDATE_DELAYED_GCODE ID=_UPDATE_UNIT1_DATA DURATION=1


[gcode_macro TOGGLE_CHAMBER_HEAT]
gcode:
    {% set temp = params.CHAMBER_TEMP|default(60)|int %} 
    {% set speed = params.CHAMBER_FAN_SPEED|default(70)|float / 100%} 
    {% if printer['fan_generic iHeater_F'].speed > 0 %}
      SET_IDLE_TIMEOUT TIMEOUT=600
      SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET=0
      UPDATE_DELAYED_GCODE ID=filter_off DURATION=240
    {% else %}
      SET_IDLE_TIMEOUT TIMEOUT=18000
      SET_FAN_SPEED FAN=iHeater_F SPEED={speed}
      SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={temp}
    {% endif %}


[gcode_macro iHeater_OFF]
gcode:
    SET_HEATER_TEMPERATURE HEATER=iHeater_M_Heater TARGET=0
    UPDATE_DELAYED_GCODE ID=_UPDATE_chamber1_DATA DURATION=0
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO1 DURATION=0