

#========================================================
#=====================iHeater cfg========================
#========================================================

#=====================iHeater pins=======================
[board_pins iHeater_Aliases]
mcu: iHeater
aliases:
    TH0=PA3, TH1=PA0,
    HEATER=PA1, FAN=PA2,
    MODE=PA4,
    LED1=PA7, LED2=PA6, LED3=PA5,
    USART1_TX=PA9, USART1_RX=PA10

#=====================iHeater mcu=======================
[mcu iHeater] #second MCU
is_non_critical: true # flag this as non critical
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_430018000E53304347373020-if00

#=====================iHeater config=======================

#PID_CALIBRATE HEATER=iHeater_H TARGET=100
[heater_generic iHeater_H]
heater_pin: iHeater:HEATER
max_power: 1
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: iHeater:TH0
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 120
pid_Kp=32.923
pid_Ki=5.628
pid_Kd=48.150

[verify_heater iHeater_H]
max_error: 240
check_gain_time: 120
heating_gain: 1

[heater_fan chamber_heater_fan]
pin: iHeater:FAN
heater: iHeater_H
heater_temp: 45.0
fan_speed: 1.0
shutdown_speed: 0
kick_start_time: 0.5

[temperature_sensor iHeater_Chamber]
sensor_pin: iHeater:TH1
sensor_type: NTC 100K MGB18-104F39050L32
min_temp: 0
max_temp: 140


[gcode_button mode_button]
pin: iHeater:MODE
# debounce_delay: 50
press_gcode: iHEATER_OFF

[output_pin led_1]
pin: iHeater:LED1

[output_pin led_2]
pin: iHeater:LED2

[output_pin led_3]
pin: iHeater:LED3

#######################################################
##########################SETUP########################
#######################################################

[gcode_macro CHAMBER_VARS]
variable_chamber_target: 0        # целевая температура камеры
variable_delta_temp: 10           # дельта между камерой и нагревателем
variable_heater_target: 0         # температура, до которой нужно греть нагреватель
variable_max_heater_temp: 100     # максимальная температура нагревателя (если delta = 0)
gcode:

##########################MACRO########################

[gcode_macro M141]
#rename_existing: M141.1
gcode:
    # Получаем желаемую температуру камеры из параметра S, по умолчанию 60°C
    {% set chamber_temp = params.S|default(60)|int %}
    # Получаем значение температурной дельты:
    # - если передан параметр D — используем его
    # - иначе берём значение delta_temp из CHAMBER_VARS
    {% set delta = params.D|default(printer["gcode_macro CHAMBER_VARS"].delta_temp)|int %}
    # Получаем максимальную температуру нагревателя:
    # - если передан параметр H — используем его
    # - иначе берём значение max_heater_temp из CHAMBER_VARS
    {% set max_temp = params.H|default(printer["gcode_macro CHAMBER_VARS"].max_heater_temp)|int %}

    RESPOND prefix="M141" msg="S{chamber_temp} D{delta} H{max_temp}"

    # Если указана температура 0 — отключаем нагрев
    {% if chamber_temp == 0 %}
        iHEATER_OFF
        RESPOND prefix="M141" msg="Нагрев камеры отключён (S=0)"
    {% else %}
        {% if chamber_temp < 0 %}
            RESPOND TYPE=error MSG="Некорректное значение температуры камеры (ниже 0°C). Использовано значение по умолчанию."
            {% set chamber_temp = 60 %}
        {% endif %}    

        # Вычисляем целевую температуру нагревателя:
        # - если дельта больше 0 → используем chamber_temp + delta
        # - иначе греем до max_temp напрямую
        {% if delta > 0 %}
            {% set heater_target = chamber_temp + delta %}
        {% else %}
            {% set heater_target = max_temp %}
        {% endif %}

        {% if heater_target > max_temp %}
            RESPOND TYPE=warning MSG="Целевая температура нагревателя ограничена до {max_temp}°C"
            {% set heater_target = max_temp %}
        {% endif %}

        # Устанавливаем температуру нагревателя
        SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={heater_target}

        # Сохраняем параметры в CHAMBER_VARS для delayed_gcode
        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=heater_target VALUE={heater_target}
        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=chamber_target VALUE={chamber_temp}
        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=delta_temp VALUE={delta}
        # Запускаем макрос контроля температуры, если он ещё не работает
        UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1
    {% endif %}


[gcode_macro M191]
#rename_existing: M191.1
gcode:
    # Получаем желаемую температуру воздуха в камере из параметра S, по умолчанию 60°C
    {% set chamber_temp = params.S|default(60)|int %}
    {% set delta = params.D|default(printer["gcode_macro CHAMBER_VARS"].delta_temp)|int %}
    {% set max_temp = params.H|default(printer["gcode_macro CHAMBER_VARS"].max_heater_temp)|int %}

    # Если указана температура 0 — отключаем нагрев
    {% if chamber_temp == 0 %}
        iHEATER_OFF
        RESPOND prefix="M191" msg="Нагрев камеры отключён (S=0)"
    {% else %}
        # Проверка на отрицательную температуру
        {% if chamber_temp < 0 %}
            RESPOND TYPE=error MSG="Некорректное значение температуры камеры (ниже 0°C). Использовано значение по умолчанию 60°C."
            {% set chamber_temp = 60 %}
        {% endif %}    

        # Рассчитываем температуру нагревателя
        {% if delta > 0 %}
            {% set heater_target = chamber_temp + delta %}
        {% else %}
            {% set heater_target = max_temp %}
        {% endif %}

        # Проверка максимальной температуры
        {% if heater_target > max_temp %}
            RESPOND TYPE=warning MSG="Целевая температура нагревателя ограничена до {max_temp}°C"
            {% set heater_target = max_temp %}
        {% endif %}

        # Устанавливаем температуру нагревателя
        SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={heater_target}

        # Сохраняем параметры в CHAMBER_VARS для delayed_gcode
        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=heater_target VALUE={heater_target}
        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=chamber_target VALUE={chamber_temp}
        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=delta_temp VALUE={delta}

        # Запускаем delayed_gcode для контроля температуры
        UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1

        # Ждём, пока камера реально достигнет температуры
        TEMPERATURE_WAIT SENSOR=iHeater_Chamber MINIMUM={chamber_temp}
        RESPOND prefix="M191" msg="Камера достигла температуры {chamber_temp}°C"
    {% endif %}


[gcode_macro iHEATER_ON]
description: Псевдоним команды M141 с альтернативными именами параметров
gcode:
    {% set s = params.CHAMBER_TEMP|default(60)|int %}
    {% set d = params.DELTA|default(printer["gcode_macro CHAMBER_VARS"].delta_temp)|int %}
    {% set h = params.HEATER_MAX|default(printer["gcode_macro CHAMBER_VARS"].max_heater_temp)|int %}

    M141 S{s} D{d} H{h}


[gcode_macro iHEATER_OFF]
gcode:
    SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=heater_target VALUE=0
    SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=chamber_target VALUE=0
    SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET=0
    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1
    RESPOND prefix="CHAMBER_HEATER_OFF" msg="Нагрев отключён. Ожидаем охлаждение до 50°C."


[delayed_gcode _iHEATER_CONTROL]
gcode:
    # Целевая температура камеры
    {% set target_chamber_temp = printer["gcode_macro CHAMBER_VARS"].chamber_target|default(0)|float %}

    # Получаем температуру, до которой должен быть нагрет нагреватель
    {% set target_heater_temp = printer["gcode_macro CHAMBER_VARS"].heater_target|default(0)|float %}

    # Дельта — насколько температура нагревателя превышает температуру камеры
    {% set delta = printer["gcode_macro CHAMBER_VARS"].delta_temp|default(0)|float %}

    # Максимальная температура нагревателя (используется для защиты или fallback логики)
    {% set max_heater_temp = printer["gcode_macro CHAMBER_VARS"].max_heater_temp|default(100)|float %}    

    # Текущая температура нагревателя
    {% set current_heater_temp = printer["heater_generic iHeater_H"].temperature %}

    # Текущая температура воздуха в камере (с термодатчика)
    {% set chamber_temp = printer["temperature_sensor iHeater_Sens_C"].temperature %}

    {% if target_heater_temp > 0 %}
        # Нагрев активен

        {% set temp_diff = target_chamber_temp - chamber_temp %}
        {% set adjustment_step = [(delta / 10.0), 1] | max %}

        {% if temp_diff > 1 %}
            # Камера холоднее целевой, плавно увеличиваем температуру нагревателя
            {% set target_heater_temp = target_heater_temp + adjustment_step %}
            
        {% elif temp_diff < -1 %}
            # Камера горячее целевой, плавно уменьшаем температуру нагревателя
            {% set target_heater_temp = target_heater_temp - adjustment_step %}
        {% endif %}

        # Защита от выхода за допустимые пределы:
        {% if target_heater_temp > max_heater_temp %}
            RESPOND TYPE=warning MSG="Температура нагревателя превышает максимально допустимую. Ограничение до {max_heater_temp}°C"
            {% set target_heater_temp = max_heater_temp %}
        {% elif target_heater_temp < target_chamber_temp %}
            {% set target_heater_temp = target_chamber_temp %}
        {% endif %}
    
        # {% if target_heater_temp < 0 %}
        #     {% set target_heater_temp = 0 %}
        # {% endif %}

        SET_GCODE_VARIABLE MACRO=CHAMBER_VARS VARIABLE=heater_target VALUE={target_heater_temp}
        SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={target_heater_temp}

        UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1

    {% elif current_heater_temp > 50 %}
        # Нагрев выключен, но нагреватель ещё не остыл
        RESPOND prefix="iHeater_OFF" msg="Охлаждение нагревателя..."
        UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1

    {% else %}
        # Нагреватель остыл — завершаем макрос
        RESPOND prefix="iHeater_control" msg="Нагрев камеры завершён."
        UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=0
    {% endif %}